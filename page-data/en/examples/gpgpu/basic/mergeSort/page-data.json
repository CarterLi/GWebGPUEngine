{"componentChunkName":"component---node-modules-antv-gatsby-theme-antv-site-templates-example-tsx","path":"/en/examples/gpgpu/basic/mergeSort","result":{"data":{"site":{"siteMetadata":{"title":"GWebGPU","examples":[{"slug":"gpgpu/basic","icon":"gallery","title":{"zh":"基础算法","en":"Basic Algorithms"}},{"slug":"gpgpu/graph","icon":"gallery","title":{"zh":"图算法","en":"Graph"}},{"slug":"rendering","icon":"gallery","title":{"zh":"渲染","en":"Rendering"}}],"playground":{"container":"<div style=\"justify-content: center;position: relative\" id=\"wrapper\"/>","playgroundDidMount":"(function(history){\n        var pushState = history.pushState;\n        history.pushState = function(state) {\n          window.gwebgpuClean && window.gwebgpuClean();\n          return pushState.apply(history, arguments);\n        };\n      })(window.history);","playgroundWillUnmount":"window.gwebgpuClean && window.gwebgpuClean();","dependencies":{"@antv/g-webgpu":"latest"},"htmlCodeTemplate":null}},"pathPrefix":""},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/zh/examples/gallery"},"frontmatter":{"title":"所有图表","order":-1,"icon":"other"},"parent":{"__typename":"File","relativePath":"gallery/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/gallery"},"frontmatter":{"title":"Gallery","order":-1,"icon":"other"},"parent":{"__typename":"File","relativePath":"gallery/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/rendering/interaction"},"frontmatter":{"title":"交互","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"rendering/interaction/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/rendering/interaction"},"frontmatter":{"title":"Interaction","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"rendering/interaction/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/gpgpu/basic/add2vectors"},"frontmatter":{"title":"两个向量相加","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"gpgpu/basic/add2vectors/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/gpgpu/basic/add2vectors"},"frontmatter":{"title":"Add 2 vectors","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"gpgpu/basic/add2vectors/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/rendering/camera"},"frontmatter":{"title":"相机","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"rendering/camera/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/rendering/camera"},"frontmatter":{"title":"Camera","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"rendering/camera/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/gpgpu/graph/fruchterman"},"frontmatter":{"title":"Fruchterman Layout","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"gpgpu/graph/fruchterman/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/gpgpu/graph/fruchterman"},"frontmatter":{"title":"Fruchterman 布局算法","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"gpgpu/graph/fruchterman/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/gpgpu/basic/mergeSort"},"frontmatter":{"title":"Merge Sort","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"gpgpu/basic/mergeSort/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/gpgpu/basic/mergeSort"},"frontmatter":{"title":"归并排序","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"gpgpu/basic/mergeSort/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/gpgpu/basic/bitonicSort"},"frontmatter":{"title":"Bitonic Sort (WebGPU Only)","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"gpgpu/basic/bitonicSort/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/gpgpu/basic/bitonicSort"},"frontmatter":{"title":"奇偶排序 (WebGPU Only)","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"gpgpu/basic/bitonicSort/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/rendering/renderables"},"frontmatter":{"title":"Renderable","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"rendering/renderables/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/rendering/lighting"},"frontmatter":{"title":"Lighting","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"rendering/lighting/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/rendering/lighting"},"frontmatter":{"title":"光照","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"rendering/lighting/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/gpgpu/graph/sssp"},"frontmatter":{"title":"SSSP(Single source shortest path) (WebGPU Only)","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"gpgpu/graph/sssp/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/gpgpu/graph/sssp"},"frontmatter":{"title":"单源最短路径算法 (WebGPU Only)","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"gpgpu/graph/sssp/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/gpgpu/basic/reduce"},"frontmatter":{"title":"Reduce (WebGPU Only)","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"gpgpu/basic/reduce/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/gpgpu/basic/reduce"},"frontmatter":{"title":"Reduce (WebGPU Only)","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"gpgpu/basic/reduce/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/rendering/scenegraph"},"frontmatter":{"title":"SceneGraph","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"rendering/scenegraph/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/rendering/scenegraph"},"frontmatter":{"title":"场景图","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"rendering/scenegraph/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/rendering/renderables"},"frontmatter":{"title":"Post Processing","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"rendering/renderables/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/rendering/material"},"frontmatter":{"title":"Material","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"rendering/material/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/rendering/material"},"frontmatter":{"title":"材质","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"rendering/material/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/rendering/geometry"},"frontmatter":{"title":"几何体","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"rendering/geometry/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/rendering/geometry"},"frontmatter":{"title":"Geometry","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"rendering/geometry/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/rendering/postprocessing"},"frontmatter":{"title":"后处理","order":5,"icon":null},"parent":{"__typename":"File","relativePath":"rendering/postprocessing/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/rendering/postprocessing"},"frontmatter":{"title":"后处理","order":5,"icon":null},"parent":{"__typename":"File","relativePath":"rendering/postprocessing/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/experiment/unitchart"},"frontmatter":{"title":"Unitchart","order":6,"icon":null},"parent":{"__typename":"File","relativePath":"experiment/unitchart/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/experiment/unitchart"},"frontmatter":{"title":"Unitchart","order":6,"icon":null},"parent":{"__typename":"File","relativePath":"experiment/unitchart/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/experiment/raytracer"},"frontmatter":{"title":"RayTracer","order":7,"icon":null},"parent":{"__typename":"File","relativePath":"experiment/raytracer/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/experiment/raytracer"},"frontmatter":{"title":"RayTracer","order":7,"icon":null},"parent":{"__typename":"File","relativePath":"experiment/raytracer/index.zh.md"}}}]}},"pageContext":{"allDemos":[{"relativePath":"rendering/scenegraph/demo/cubes.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/rendering/scenegraph/demo/cubes.tsx","order":1,"filename":"cubes.tsx","title":"Attach cubes to a rotating group","screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*OEcdTJOyRQMAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"SceneGraph","order":303},"zh":{"title":"场景图","order":303}}},{"relativePath":"rendering/scenegraph/demo/solar-system.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/rendering/scenegraph/demo/solar-system.tsx","order":0,"filename":"solar-system.tsx","title":"Solar system","screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*0d6WQa-BbUQAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"SceneGraph","order":303},"zh":{"title":"场景图","order":303}}},{"relativePath":"rendering/renderables/demo/cube.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/rendering/renderables/demo/cube.tsx","order":3,"filename":"cube.tsx","title":"A Rotating Cube","screenshot":"https://gw.alipayobjects.com/os/s/prod/antv/assets/image/screenshot-placeholder-b8e70.png","postFrontmatter":{"zh":{"title":"Renderable","order":302},"en":{"title":"Post Processing","order":303}}},{"relativePath":"rendering/renderables/demo/grid.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/rendering/renderables/demo/grid.tsx","order":2,"filename":"grid.tsx","title":"Grid","screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*dYVxQoW7gmIAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"Renderable","order":302},"en":{"title":"Post Processing","order":303}}},{"relativePath":"rendering/renderables/demo/line.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/rendering/renderables/demo/line.tsx","order":1,"filename":"line.tsx","title":"2D Line","screenshot":"https://gw.alipayobjects.com/os/s/prod/antv/assets/image/screenshot-placeholder-b8e70.png","postFrontmatter":{"zh":{"title":"Renderable","order":302},"en":{"title":"Post Processing","order":303}}},{"relativePath":"rendering/renderables/demo/point.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/rendering/renderables/demo/point.tsx","order":0,"filename":"point.tsx","title":"2D Point","screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*UOGoTILse-0AAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"Renderable","order":302},"en":{"title":"Post Processing","order":303}}},{"relativePath":"rendering/material/demo/basic.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/rendering/material/demo/basic.tsx","order":0,"filename":"basic.tsx","title":"Basic Material","screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*dV0gTafuRHsAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"Material","order":303},"zh":{"title":"材质","order":303}}},{"relativePath":"rendering/interaction/demo/multi-canvas.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/rendering/interaction/demo/multi-canvas.tsx","order":2,"filename":"multi-canvas.tsx","hidden":true,"title":"Multi canvas contexts(Not recommended)","screenshot":"https://gw.alipayobjects.com/os/s/prod/antv/assets/image/screenshot-placeholder-b8e70.png","postFrontmatter":{"zh":{"title":"交互","order":300},"en":{"title":"Interaction","order":300}}},{"relativePath":"rendering/interaction/demo/multi-view.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/rendering/interaction/demo/multi-view.tsx","order":1,"filename":"multi-view.tsx","title":"Multi views(Recommended)","screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*ytT4SoKan_0AAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"交互","order":300},"en":{"title":"Interaction","order":300}}},{"relativePath":"rendering/interaction/demo/pixel-picker.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/rendering/interaction/demo/pixel-picker.tsx","order":4,"filename":"pixel-picker.tsx","title":"PixelPicker","screenshot":"https://gw.alipayobjects.com/os/s/prod/antv/assets/image/screenshot-placeholder-b8e70.png","postFrontmatter":{"zh":{"title":"交互","order":300},"en":{"title":"Interaction","order":300}}},{"relativePath":"rendering/interaction/demo/ray-picker.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/rendering/interaction/demo/ray-picker.tsx","order":3,"filename":"ray-picker.tsx","title":"RayPicker","screenshot":"https://gw.alipayobjects.com/os/s/prod/antv/assets/image/screenshot-placeholder-b8e70.png","postFrontmatter":{"zh":{"title":"交互","order":300},"en":{"title":"Interaction","order":300}}},{"relativePath":"rendering/interaction/demo/responsive.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/rendering/interaction/demo/responsive.tsx","order":0,"filename":"responsive.tsx","title":"Use a responsive viewport","screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*ByguS56BAO0AAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"交互","order":300},"en":{"title":"Interaction","order":300}}},{"relativePath":"rendering/geometry/demo/box.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/rendering/geometry/demo/box.tsx","order":0,"filename":"box.tsx","title":"Box","screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*dV0gTafuRHsAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"几何体","order":303},"en":{"title":"Geometry","order":303}}},{"relativePath":"rendering/geometry/demo/merged.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/rendering/geometry/demo/merged.tsx","order":3,"filename":"merged.tsx","title":"Merged geometry","screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*_fOKRJ18IcUAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"几何体","order":303},"en":{"title":"Geometry","order":303}}},{"relativePath":"rendering/geometry/demo/plane.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/rendering/geometry/demo/plane.tsx","order":2,"filename":"plane.tsx","title":"Plane","screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*6zGmSbSJHgcAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"几何体","order":303},"en":{"title":"Geometry","order":303}}},{"relativePath":"rendering/geometry/demo/world.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/rendering/geometry/demo/world.tsx","order":4,"filename":"world.tsx","title":"World","screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*jQpbRrS6en0AAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"几何体","order":303},"en":{"title":"Geometry","order":303}}},{"relativePath":"rendering/geometry/demo/sphere.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/rendering/geometry/demo/sphere.tsx","order":1,"filename":"sphere.tsx","title":"Sphere","screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*jQpbRrS6en0AAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"几何体","order":303},"en":{"title":"Geometry","order":303}}},{"relativePath":"rendering/camera/demo/landmark.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/rendering/camera/demo/landmark.tsx","order":0,"filename":"landmark.tsx","title":"Switch to landmarks of a camera","screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*nIKoSa3zNBMAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"相机","order":301},"en":{"title":"Camera","order":301}}},{"relativePath":"rendering/camera/demo/perspective.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/rendering/camera/demo/perspective.tsx","order":2,"filename":"perspective.tsx","title":"Camera with perspective projection","screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*5aAORoqcdI0AAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"相机","order":301},"en":{"title":"Camera","order":301}}},{"relativePath":"rendering/camera/demo/tracking.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/rendering/camera/demo/tracking.tsx","order":3,"filename":"tracking.tsx","title":"Tracking","screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*RApkT63FesAAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"相机","order":301},"en":{"title":"Camera","order":301}}},{"relativePath":"rendering/camera/demo/ortho.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/rendering/camera/demo/ortho.tsx","order":1,"filename":"ortho.tsx","title":"Camera with orthographic projection","screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*QQghSadPJnkAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"zh":{"title":"相机","order":301},"en":{"title":"Camera","order":301}}},{"relativePath":"gpgpu/graph/sssp/demo/index.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/gpgpu/graph/sssp/demo/index.tsx","order":0,"filename":"index.tsx","title":"Bellman-Ford","screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*U_ynS4APYr8AAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"SSSP(Single source shortest path) (WebGPU Only)","order":2},"zh":{"title":"单源最短路径算法 (WebGPU Only)","order":2}}},{"relativePath":"gpgpu/graph/sssp/demo/perf.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/gpgpu/graph/sssp/demo/perf.tsx","order":1,"filename":"perf.tsx","title":"Bellman-Ford in a large directed graph","screenshot":"https://gw.alipayobjects.com/os/s/prod/antv/assets/image/screenshot-placeholder-b8e70.png","postFrontmatter":{"en":{"title":"SSSP(Single source shortest path) (WebGPU Only)","order":2},"zh":{"title":"单源最短路径算法 (WebGPU Only)","order":2}}},{"relativePath":"gpgpu/graph/fruchterman/demo/index.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/gpgpu/graph/fruchterman/demo/index.tsx","order":0,"filename":"index.tsx","title":"Fruchterman 布局算法","screenshot":"https://gw.alipayobjects.com/os/s/prod/antv/assets/image/screenshot-placeholder-b8e70.png","postFrontmatter":{"en":{"title":"Fruchterman Layout","order":1},"zh":{"title":"Fruchterman 布局算法","order":1}}},{"relativePath":"gpgpu/graph/fruchterman/demo/precompiled.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/gpgpu/graph/fruchterman/demo/precompiled.tsx","order":1,"filename":"precompiled.tsx","title":"Fruchterman 布局算法(预编译)","screenshot":"https://gw.alipayobjects.com/os/s/prod/antv/assets/image/screenshot-placeholder-b8e70.png","postFrontmatter":{"en":{"title":"Fruchterman Layout","order":1},"zh":{"title":"Fruchterman 布局算法","order":1}}},{"relativePath":"gpgpu/graph/fruchterman/demo/cluster.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/gpgpu/graph/fruchterman/demo/cluster.tsx","order":2,"filename":"cluster.tsx","title":"Cluster","screenshot":"https://gw.alipayobjects.com/os/s/prod/antv/assets/image/screenshot-placeholder-b8e70.png","postFrontmatter":{"en":{"title":"Fruchterman Layout","order":1},"zh":{"title":"Fruchterman 布局算法","order":1}}},{"relativePath":"gpgpu/basic/reduce/demo/reduce1.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/gpgpu/basic/reduce/demo/reduce1.tsx","order":0,"filename":"reduce1.tsx","title":"Reduce 基础版本","screenshot":"https://gw.alipayobjects.com/os/s/prod/antv/assets/image/screenshot-placeholder-b8e70.png","postFrontmatter":{"en":{"title":"Reduce (WebGPU Only)","order":2},"zh":{"title":"Reduce (WebGPU Only)","order":2}}},{"relativePath":"gpgpu/basic/reduce/demo/reduce2.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/gpgpu/basic/reduce/demo/reduce2.tsx","order":1,"filename":"reduce2.tsx","title":"Reduce 改进 2.0","screenshot":"https://gw.alipayobjects.com/os/s/prod/antv/assets/image/screenshot-placeholder-b8e70.png","postFrontmatter":{"en":{"title":"Reduce (WebGPU Only)","order":2},"zh":{"title":"Reduce (WebGPU Only)","order":2}}},{"relativePath":"gpgpu/basic/reduce/demo/reduce3.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/gpgpu/basic/reduce/demo/reduce3.tsx","order":2,"filename":"reduce3.tsx","title":"Reduce 改进 3.0","screenshot":"https://gw.alipayobjects.com/os/s/prod/antv/assets/image/screenshot-placeholder-b8e70.png","postFrontmatter":{"en":{"title":"Reduce (WebGPU Only)","order":2},"zh":{"title":"Reduce (WebGPU Only)","order":2}}},{"relativePath":"gpgpu/basic/reduce/demo/reduce4.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/gpgpu/basic/reduce/demo/reduce4.tsx","order":3,"filename":"reduce4.tsx","title":"Reduce 改进 4.0","screenshot":"https://gw.alipayobjects.com/os/s/prod/antv/assets/image/screenshot-placeholder-b8e70.png","postFrontmatter":{"en":{"title":"Reduce (WebGPU Only)","order":2},"zh":{"title":"Reduce (WebGPU Only)","order":2}}},{"relativePath":"gpgpu/basic/reduce/demo/reduce5.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/gpgpu/basic/reduce/demo/reduce5.tsx","order":4,"filename":"reduce5.tsx","title":"Reduce 改进 5.0","screenshot":"https://gw.alipayobjects.com/os/s/prod/antv/assets/image/screenshot-placeholder-b8e70.png","postFrontmatter":{"en":{"title":"Reduce (WebGPU Only)","order":2},"zh":{"title":"Reduce (WebGPU Only)","order":2}}},{"relativePath":"gpgpu/basic/mergeSort/demo/index.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/gpgpu/basic/mergeSort/demo/index.tsx","order":0,"filename":"index.tsx","title":"归并排序","screenshot":"https://gw.alipayobjects.com/os/s/prod/antv/assets/image/screenshot-placeholder-b8e70.png","postFrontmatter":{"en":{"title":"Merge Sort","order":1},"zh":{"title":"归并排序","order":1}}},{"relativePath":"gpgpu/basic/bitonicSort/demo/index.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/gpgpu/basic/bitonicSort/demo/index.tsx","order":0,"filename":"index.tsx","title":"奇偶排序","screenshot":"https://gw.alipayobjects.com/os/s/prod/antv/assets/image/screenshot-placeholder-b8e70.png","postFrontmatter":{"en":{"title":"Bitonic Sort (WebGPU Only)","order":1},"zh":{"title":"奇偶排序 (WebGPU Only)","order":1}}},{"relativePath":"gpgpu/basic/add2vectors/demo/add2vectors-precompiled.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/gpgpu/basic/add2vectors/demo/add2vectors-precompiled.tsx","order":-1,"filename":"add2vectors-precompiled.tsx","postFrontmatter":{"zh":{"title":"两个向量相加","order":0},"en":{"title":"Add 2 vectors","order":0}}},{"relativePath":"gpgpu/basic/add2vectors/demo/add2vectors.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/gpgpu/basic/add2vectors/demo/add2vectors.tsx","order":-1,"filename":"add2vectors.tsx","postFrontmatter":{"zh":{"title":"两个向量相加","order":0},"en":{"title":"Add 2 vectors","order":0}}},{"relativePath":"gpgpu/basic/add2vectors/demo/iteration.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/gpgpu/basic/add2vectors/demo/iteration.tsx","order":2,"filename":"iteration.tsx","title":"迭代多次，串联自身","screenshot":"https://gw.alipayobjects.com/os/s/prod/antv/assets/image/screenshot-placeholder-b8e70.png","postFrontmatter":{"zh":{"title":"两个向量相加","order":0},"en":{"title":"Add 2 vectors","order":0}}},{"relativePath":"gpgpu/basic/add2vectors/demo/pipeline.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/gpgpu/basic/add2vectors/demo/pipeline.tsx","order":3,"filename":"pipeline.tsx","title":"串联多个 Kernel","screenshot":"https://gw.alipayobjects.com/os/s/prod/antv/assets/image/screenshot-placeholder-b8e70.png","postFrontmatter":{"zh":{"title":"两个向量相加","order":0},"en":{"title":"Add 2 vectors","order":0}}},{"relativePath":"experiment/unitchart/demo/index.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/experiment/unitchart/demo/index.tsx","order":0,"filename":"index.tsx","title":"Unitchart","screenshot":"https://gw.alipayobjects.com/os/s/prod/antv/assets/image/screenshot-placeholder-b8e70.png","postFrontmatter":{"en":{"title":"Unitchart","order":6},"zh":{"title":"Unitchart","order":6}}},{"relativePath":"experiment/raytracer/demo/index.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/experiment/raytracer/demo/index.tsx","order":0,"filename":"index.tsx","title":"RayTracer","screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*FARSSo38alcAAAAAAAAAAAAAARQnAQ","postFrontmatter":{"en":{"title":"RayTracer","order":7},"zh":{"title":"RayTracer","order":7}}}],"exampleSections":{"examples":[{"relativePath":"gpgpu/basic/mergeSort/demo/index.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/gpgpu/basic/mergeSort/demo/index.tsx","order":0,"filename":"index.tsx","title":"归并排序","screenshot":"https://gw.alipayobjects.com/os/s/prod/antv/assets/image/screenshot-placeholder-b8e70.png","source":"import { World } from '@antv/g-webgpu';\nimport { Compiler } from '@antv/g-webgpu-compiler';\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\n\n// ported from https://bl.ocks.org/zz85/cafa1b8b3098b5a40e918487422d47f6\nconst gCode = `\nimport { localInvocationID, globalInvocationID } from 'g-webgpu';\n\n@numthreads(1024, 1, 1)\nclass MergeSort {\n  @in @out\n  gData: float[];\n\n  @in\n  uPass: float;\n\n  @in\n  uStage2: float;\n\n  @in\n  uPassModStage: float;\n\n  @in\n  uStage2PmS1: float;\n\n  @main\n  compute() {\n    const gid = globalInvocationID.x;\n    const j = floor(mod(float(gid), this.uStage2));\n\n    const compare =\n\t\t\t(j < this.uPassModStage || j > this.uStage2PmS1) ? 0 :\n\t\t\t\tmod((j + this.uPassModStage) / this.uPass, 2) < 1 ? 1:\n\t\t\t\t -1;\n\n    const offset = int(compare * this.uPass);\n    \n    const current = this.gData[gid];\n    const reference = this.gData[gid + offset];\n\n\t\tthis.gData[gid] = (current * compare < reference * compare) ? current : reference;\n  }\n}\n`;\n\nconst resetData = (arr: Float32Array, sortLength: number) => {\n  for (let i = 0; i < sortLength; i++) {\n    arr[i] = Math.fround(Math.random() * 10);\n  }\n};\n\nconst validateSorted = (arr: Float32Array) => {\n  const length = arr.length;\n  for (let i = 0; i < length; i++) {\n    if (i !== length - 1 && arr[i] > arr[i + 1]) {\n      console.log('validation error:', i, arr[i], arr[i + 1]);\n      return false;\n    }\n  }\n  return true;\n};\n\nconst MAX_THREAD_NUM = 1024;\nconst ELEMENTS_NUM = 2048000;\nconst data = new Float32Array(ELEMENTS_NUM);\nresetData(data, ELEMENTS_NUM);\nconst threadgroupsPerGrid = Math.max(1, ELEMENTS_NUM / MAX_THREAD_NUM);\n\nlet stage = 0; // stage iterations\nlet pass = 0;\n\nconst App = React.memo(function MergeSort() {\n  const [cpuElapsedTime, setCpuElapsedTime] = useState(0);\n  const [gpuElapsedTime, setGpuElapsedTime] = useState(0);\n\n  const computeCPU = () => {\n    const now = performance.now();\n    data.sort((a, b) => a - b);\n\n    setCpuElapsedTime(Math.round(performance.now() - now));\n    console.log(`CPU sort result validation: ${validateSorted(data) ? 'success' : 'failure'}`);\n  };\n\n  const computeGPU = async () => {\n    // compile our kernel code\n    const compiler = new Compiler();\n    const precompiledBundle1 = compiler.compileBundle(gCode);\n\n    // create world\n    const world = World.create({\n      engineOptions: {\n        supportCompute: true,\n      },\n    });\n\n    const kernel = world\n      .createKernel(precompiledBundle1)\n      .setDispatch([threadgroupsPerGrid, 1, 1])\n      .setBinding('gData', data);\n\n    const now = performance.now();\n    while (true) {\n      if (stage > Math.log2(ELEMENTS_NUM) + 1) {\n        break;\n      }\n\n      const tPass = 1 << pass;\n      const tStage = 1 << stage;\n      const uStage2 = tStage + tStage;\n      const uPassModStage = tPass % tStage;\n      const uStage2PmS1 = uStage2 - uPassModStage - 1;\n\n      kernel.setBinding({\n        uStage2,\n        uPassModStage,\n        uStage2PmS1,\n        uPass: tPass,\n      });\n\n      await kernel.execute();\n\n      pass--;\n      if (pass < 0) {\n        stage++;\n        pass = stage;\n      }\n    }\n\n    const output = await kernel.getOutput();\n\n    setGpuElapsedTime(Math.round(performance.now() - now));\n    console.log(`GPU sort result validation: ${validateSorted(output) ? 'success' : 'failure'}`);\n  };\n\n  useEffect(() => {\n    computeGPU();\n    computeCPU();\n  }, []);\n\n  return (\n    <ul>\n      <li>number of elements: {ELEMENTS_NUM}</li>\n      <li>CPU sort time: {cpuElapsedTime} ms</li>\n      <li>GPU sort time: {gpuElapsedTime} ms</li>\n    </ul>\n  );\n});\n\nReactDOM.render(<App />, document.getElementById('wrapper'));\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g-webgpu\", \"@antv/g-webgpu-compiler\", \"react\", \"react-dom\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g-webgpu\"), require(\"@antv/g-webgpu-compiler\"), require(\"react\"), require(\"react-dom\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.gWebgpu, global.gWebgpuCompiler, global.react, global.reactDom);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_gWebgpu, _gWebgpuCompiler, _react, _reactDom) {\n  \"use strict\";\n\n  _react = _interopRequireWildcard(_react);\n  _reactDom = _interopRequireDefault(_reactDom);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  // ported from https://bl.ocks.org/zz85/cafa1b8b3098b5a40e918487422d47f6\n  var gCode = \"\\nimport { localInvocationID, globalInvocationID } from 'g-webgpu';\\n\\n@numthreads(1024, 1, 1)\\nclass MergeSort {\\n  @in @out\\n  gData: float[];\\n\\n  @in\\n  uPass: float;\\n\\n  @in\\n  uStage2: float;\\n\\n  @in\\n  uPassModStage: float;\\n\\n  @in\\n  uStage2PmS1: float;\\n\\n  @main\\n  compute() {\\n    const gid = globalInvocationID.x;\\n    const j = floor(mod(float(gid), this.uStage2));\\n\\n    const compare =\\n\\t\\t\\t(j < this.uPassModStage || j > this.uStage2PmS1) ? 0 :\\n\\t\\t\\t\\tmod((j + this.uPassModStage) / this.uPass, 2) < 1 ? 1:\\n\\t\\t\\t\\t -1;\\n\\n    const offset = int(compare * this.uPass);\\n    \\n    const current = this.gData[gid];\\n    const reference = this.gData[gid + offset];\\n\\n\\t\\tthis.gData[gid] = (current * compare < reference * compare) ? current : reference;\\n  }\\n}\\n\";\n\n  var resetData = function resetData(arr, sortLength) {\n    for (var i = 0; i < sortLength; i++) {\n      arr[i] = Math.fround(Math.random() * 10);\n    }\n  };\n\n  var validateSorted = function validateSorted(arr) {\n    var length = arr.length;\n\n    for (var i = 0; i < length; i++) {\n      if (i !== length - 1 && arr[i] > arr[i + 1]) {\n        console.log('validation error:', i, arr[i], arr[i + 1]);\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  var MAX_THREAD_NUM = 1024;\n  var ELEMENTS_NUM = 2048000;\n  var data = new Float32Array(ELEMENTS_NUM);\n  resetData(data, ELEMENTS_NUM);\n  var threadgroupsPerGrid = Math.max(1, ELEMENTS_NUM / MAX_THREAD_NUM);\n  var stage = 0; // stage iterations\n\n  var pass = 0;\n\n  var App = /*#__PURE__*/_react.default.memo(function MergeSort() {\n    var _useState = (0, _react.useState)(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        cpuElapsedTime = _useState2[0],\n        setCpuElapsedTime = _useState2[1];\n\n    var _useState3 = (0, _react.useState)(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        gpuElapsedTime = _useState4[0],\n        setGpuElapsedTime = _useState4[1];\n\n    var computeCPU = function computeCPU() {\n      var now = performance.now();\n      data.sort(function (a, b) {\n        return a - b;\n      });\n      setCpuElapsedTime(Math.round(performance.now() - now));\n      console.log(\"CPU sort result validation: \".concat(validateSorted(data) ? 'success' : 'failure'));\n    };\n\n    var computeGPU = async function computeGPU() {\n      // compile our kernel code\n      var compiler = new _gWebgpuCompiler.Compiler();\n      var precompiledBundle1 = compiler.compileBundle(gCode); // create world\n\n      var world = _gWebgpu.World.create({\n        engineOptions: {\n          supportCompute: true\n        }\n      });\n\n      var kernel = world.createKernel(precompiledBundle1).setDispatch([threadgroupsPerGrid, 1, 1]).setBinding('gData', data);\n      var now = performance.now();\n\n      while (true) {\n        if (stage > Math.log2(ELEMENTS_NUM) + 1) {\n          break;\n        }\n\n        var tPass = 1 << pass;\n        var tStage = 1 << stage;\n        var uStage2 = tStage + tStage;\n        var uPassModStage = tPass % tStage;\n        var uStage2PmS1 = uStage2 - uPassModStage - 1;\n        kernel.setBinding({\n          uStage2: uStage2,\n          uPassModStage: uPassModStage,\n          uStage2PmS1: uStage2PmS1,\n          uPass: tPass\n        });\n        await kernel.execute();\n        pass--;\n\n        if (pass < 0) {\n          stage++;\n          pass = stage;\n        }\n      }\n\n      var output = await kernel.getOutput();\n      setGpuElapsedTime(Math.round(performance.now() - now));\n      console.log(\"GPU sort result validation: \".concat(validateSorted(output) ? 'success' : 'failure'));\n    };\n\n    (0, _react.useEffect)(function () {\n      computeGPU();\n      computeCPU();\n    }, []);\n    return /*#__PURE__*/_react.default.createElement(\"ul\", null, /*#__PURE__*/_react.default.createElement(\"li\", null, \"number of elements: \", ELEMENTS_NUM), /*#__PURE__*/_react.default.createElement(\"li\", null, \"CPU sort time: \", cpuElapsedTime, \" ms\"), /*#__PURE__*/_react.default.createElement(\"li\", null, \"GPU sort time: \", gpuElapsedTime, \" ms\"));\n  });\n\n  _reactDom.default.render( /*#__PURE__*/_react.default.createElement(App, null), document.getElementById('wrapper'));\n});"}]},"description":""}},"staticQueryHashes":["1015175297","3000541721","3000541721","3378097331","638047554"]}