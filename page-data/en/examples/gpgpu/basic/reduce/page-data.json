{"componentChunkName":"component---node-modules-antv-gatsby-theme-antv-site-templates-example-tsx","path":"/en/examples/gpgpu/basic/reduce","result":{"data":{"site":{"siteMetadata":{"title":"GWebGPU","githubUrl":"https://github.com/antvis/GWebGPUEngine","examples":[{"slug":"gpgpu","icon":null,"title":{"zh":"GPGPU","en":"GPGPU"}},{"slug":"gpgpu/basic","icon":null,"title":{"zh":"基础算法","en":"Basic Algorithms"}},{"slug":"gpgpu/graph","icon":null,"title":{"zh":"图算法","en":"Graph"}},{"slug":"rendering","icon":null,"title":{"zh":"渲染","en":"Rendering"}}],"playground":{"container":"<div style=\"min-height: 500px; justify-content: center;position: relative\" id=\"wrapper\"/>","playgroundDidMount":null,"playgroundWillUnmount":null,"dependencies":{"@antv/g-webgpu":"latest"},"htmlCodeTemplate":null}},"pathPrefix":""},"allMarkdownRemark":{"edges":[{"node":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"我们的计算任务很简单，实现两个向量相加。详见"},{"type":"element","tagName":"a","properties":{"href":"/zh/docs/tutorial/gpgpu/add2vectors"},"children":[{"type":"text","value":"教程"}]},{"type":"text","value":"。"}]}],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/gpgpu/basic/add2vectors"},"frontmatter":{"title":"Add 2 vectors","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"gpgpu/basic/add2vectors/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"我们的计算任务很简单，实现两个向量相加。详见"},{"type":"element","tagName":"a","properties":{"href":"/zh/docs/tutorial/gpgpu/add2vectors"},"children":[{"type":"text","value":"教程"}]},{"type":"text","value":"。"}]}],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/gpgpu/basic/add2vectors"},"frontmatter":{"title":"两个向量相加","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"gpgpu/basic/add2vectors/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/gpgpu/graph/fruchterman"},"frontmatter":{"title":"Fruchterman 布局算法","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"gpgpu/graph/fruchterman/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/gpgpu/graph/fruchterman"},"frontmatter":{"title":"Fruchterman Layout","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"gpgpu/graph/fruchterman/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/gpgpu/basic/bitonicSort"},"frontmatter":{"title":"奇偶排序 (WebGPU Only)","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"gpgpu/basic/bitonicSort/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/gpgpu/basic/mergeSort"},"frontmatter":{"title":"Merge Sort","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"gpgpu/basic/mergeSort/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/gpgpu/basic/mergeSort"},"frontmatter":{"title":"归并排序","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"gpgpu/basic/mergeSort/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/gpgpu/basic/bitonicSort"},"frontmatter":{"title":"Bitonic Sort (WebGPU Only)","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"gpgpu/basic/bitonicSort/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/gpgpu/graph/sssp"},"frontmatter":{"title":"SSSP(Single source shortest path) (WebGPU Only)","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"gpgpu/graph/sssp/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/gpgpu/graph/sssp"},"frontmatter":{"title":"单源最短路径算法 (WebGPU Only)","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"gpgpu/graph/sssp/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/gpgpu/basic/reduce"},"frontmatter":{"title":"Reduce (WebGPU Only)","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"gpgpu/basic/reduce/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"只能在支持 WebGPU 的浏览器中运行，详见"},{"type":"element","tagName":"a","properties":{"href":"/zh/docs/tutorial/gpgpu/reduce"},"children":[{"type":"text","value":"教程"}]},{"type":"text","value":"。"}]}],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/gpgpu/basic/reduce"},"frontmatter":{"title":"Reduce (WebGPU Only)","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"gpgpu/basic/reduce/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"布局语法来自 ATOM: A grammar for unit visualizations"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"ATOM 语法："},{"type":"element","tagName":"a","properties":{"href":"https://intuinno.github.io/unit/#/","target":"_self","rel":["nofollow"]},"children":[{"type":"text","value":"https://intuinno.github.io/unit/#/"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"中文翻译："},{"type":"element","tagName":"a","properties":{"href":"http://vis.pku.edu.cn/blog/atom_grammar/#more-9377","target":"_self","rel":["nofollow"]},"children":[{"type":"text","value":"http://vis.pku.edu.cn/blog/atom_grammar/#more-9377"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"原论文中给出了布局的描述语法，但并未涉及布局间切换的动画，我们使用了 GWebGPU 的渲染能力："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"使用 instanced array 完成所有 mark 的高性能渲染"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"布局切换时在 Shader 中完成每个 mark 位置和大小的插值，目前为线性插值"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"支持拾取，基于 PixelPicking"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"后续可完善的方向包括："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"支持更多可配置的插值函数、mark 类型"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"更多布局，扩展至 3D"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"渲染图例和坐标轴"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"支持分面，例如 "},{"type":"element","tagName":"a","properties":{"href":"https://sanddance.js.org/app/","target":"_self","rel":["nofollow"]},"children":[{"type":"text","value":"https://sanddance.js.org/app/"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"配合滚动，实现 scrollytelling "},{"type":"element","tagName":"a","properties":{"href":"https://medium.com/nightingale/from-storytelling-to-scrollytelling-a-short-introduction-and-beyond-fbda32066964","target":"_self","rel":["nofollow"]},"children":[{"type":"text","value":"https://medium.com/nightingale/from-storytelling-to-scrollytelling-a-short-introduction-and-beyond-fbda32066964"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"本例数据是泰坦尼克号生还者和遇难者数据，每一条形如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Class: First, Age: Adult, Sex: Male, Survived: Yes"}]},{"type":"text","value":"。\n黄色代表生还，蓝色代表遇难。"}]}],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/rendering/unitchart"},"frontmatter":{"title":"Unitchart","order":6,"icon":null},"parent":{"__typename":"File","relativePath":"rendering/unitchart/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"布局语法来自 ATOM: A grammar for unit visualizations"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"ATOM 语法："},{"type":"element","tagName":"a","properties":{"href":"https://intuinno.github.io/unit/#/","target":"_self","rel":["nofollow"]},"children":[{"type":"text","value":"https://intuinno.github.io/unit/#/"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"中文翻译："},{"type":"element","tagName":"a","properties":{"href":"http://vis.pku.edu.cn/blog/atom_grammar/#more-9377","target":"_self","rel":["nofollow"]},"children":[{"type":"text","value":"http://vis.pku.edu.cn/blog/atom_grammar/#more-9377"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"原论文中给出了布局的描述语法，但并未涉及布局间切换的动画，我们使用了 GWebGPU 的渲染能力："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"使用 instanced array 完成所有 mark 的高性能渲染"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"布局切换时在 Shader 中完成每个 mark 位置和大小的插值，目前为线性插值"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"支持拾取，基于 PixelPicking"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"后续可完善的方向包括："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"支持更多可配置的插值函数、mark 类型"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"更多布局，扩展至 3D"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"渲染图例和坐标轴"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"支持分面，例如 "},{"type":"element","tagName":"a","properties":{"href":"https://sanddance.js.org/app/","target":"_self","rel":["nofollow"]},"children":[{"type":"text","value":"https://sanddance.js.org/app/"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"配合滚动，实现 scrollytelling "},{"type":"element","tagName":"a","properties":{"href":"https://medium.com/nightingale/from-storytelling-to-scrollytelling-a-short-introduction-and-beyond-fbda32066964","target":"_self","rel":["nofollow"]},"children":[{"type":"text","value":"https://medium.com/nightingale/from-storytelling-to-scrollytelling-a-short-introduction-and-beyond-fbda32066964"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"本例数据是泰坦尼克号生还者和遇难者数据，每一条形如 "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Class: First, Age: Adult, Sex: Male, Survived: Yes"}]},{"type":"text","value":"。\n黄色代表生还，蓝色代表遇难。"}]}],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/rendering/unitchart"},"frontmatter":{"title":"Unitchart","order":6,"icon":null},"parent":{"__typename":"File","relativePath":"rendering/unitchart/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/rendering/meshes"},"frontmatter":{"title":"Mesh","order":6,"icon":null},"parent":{"__typename":"File","relativePath":"rendering/meshes/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/rendering/meshes"},"frontmatter":{"title":"Mesh","order":6,"icon":null},"parent":{"__typename":"File","relativePath":"rendering/meshes/index.en.md"}}},{"node":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在 Compute Shader 中进行光线追踪，详见："},{"type":"element","tagName":"a","properties":{"href":"https://zhuanlan.zhihu.com/p/212162113%E3%80%82","target":"_self","rel":["nofollow"]},"children":[{"type":"text","value":"https://zhuanlan.zhihu.com/p/212162113。"}]}]}],"data":{"quirksMode":false}},"fields":{"slug":"/zh/examples/rendering/raytracer"},"frontmatter":{"title":"RayTracer","order":7,"icon":null},"parent":{"__typename":"File","relativePath":"rendering/raytracer/index.zh.md"}}},{"node":{"htmlAst":{"type":"root","children":[],"data":{"quirksMode":false}},"fields":{"slug":"/en/examples/rendering/raytracer"},"frontmatter":{"title":"RayTracer","order":7,"icon":null},"parent":{"__typename":"File","relativePath":"rendering/raytracer/index.en.md"}}}]}},"pageContext":{"exampleSections":{"examples":[{"relativePath":"gpgpu/basic/reduce/demo/reduce1.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/gpgpu/basic/reduce/demo/reduce1.tsx","order":0,"filename":"reduce1.tsx","title":"Reduce 基础版本","screenshot":"https://gw.alipayobjects.com/os/s/prod/antv/assets/image/screenshot-placeholder-b8e70.png","source":"import { World } from '@antv/g-webgpu';\nimport { Compiler } from '@antv/g-webgpu-compiler';\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst gCode = `\nimport { workGroupSize, workGroupID, localInvocationID } from 'g-webgpu';\n\n@numthreads(1024, 1, 1)\nclass Reduce {\n  @in\n  gData: float[]; // 输入\n\n  @out(10)\n  oData: float[]; // 输出\n\n  @shared(1024)\n  sData: float[];\n\n  @main\n  compute() {\n    const tid = localInvocationID.x;\n    const i = workGroupID.x * workGroupSize.x + localInvocationID.x;\n\n    this.sData[tid] = this.gData[i]; // 1\n    barrier(); // 2\n\n    for (let s: int = 1; s < workGroupSize.x; s*=2) {\n      if (tid % (s * 2) == 0) {\n        this.sData[tid] += this.sData[tid + s]; // 3\n      }\n      barrier();\n    }\n    if (tid == 0) {\n      this.oData[workGroupID.x] = this.sData[0]; // 4\n    }\n  }\n}\n`;\n\nconst App = React.memo(function ReduceSum1() {\n  const [CPUTimeElapsed, setCPUTimeElapsed] = useState(0);\n  const [GPUTimeElapsed, setGPUTimeElapsed] = useState(0);\n  const [CPUResult, setCPUResult] = useState(0);\n  const [GPUResult, setGPUResult] = useState(0);\n  useEffect(() => {\n    const data = new Array(1024 * 10).fill(undefined).map((_, i) => 1);\n    let timeStart = window.performance.now();\n    const sum = data.reduce((cur, prev) => prev + cur, 0);\n    setCPUTimeElapsed(window.performance.now() - timeStart);\n    setCPUResult(sum);\n\n    // compile our kernel code\n    const compiler = new Compiler();\n    const precompiledBundle = compiler.compileBundle(gCode);\n\n    const world = World.create({\n      engineOptions: {\n        supportCompute: true,\n      },\n    });\n\n    const executeKernel = async () => {\n      const kernel = world\n        .createKernel(precompiledBundle)\n        .setDispatch([10, 1, 1])\n        .setBinding('gData', data);\n\n      timeStart = window.performance.now();\n      await kernel.execute();\n      const result = await kernel.getOutput();\n\n      setGPUTimeElapsed(window.performance.now() - timeStart);\n      setGPUResult(result.reduce((cur, prev) => prev + cur, 0));\n    };\n    executeKernel();\n  }, []);\n\n  return (\n    <>\n      <h2>Reduce Sum (1024 * 10 elements)</h2>\n      <ul>\n        <li>CPU time elapsed: {CPUTimeElapsed}</li>\n        <li>GPU time elapsed: {GPUTimeElapsed}</li>\n        <li>CPUResult: {CPUResult}</li>\n        <li>GPUResult: {GPUResult}</li>\n      </ul>\n    </>\n  );\n});\n\nReactDOM.render(<App />, document.getElementById('wrapper'));\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g-webgpu\", \"@antv/g-webgpu-compiler\", \"react\", \"react-dom\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g-webgpu\"), require(\"@antv/g-webgpu-compiler\"), require(\"react\"), require(\"react-dom\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.gWebgpu, global.gWebgpuCompiler, global.react, global.reactDom);\n    global.reduce1 = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_gWebgpu, _gWebgpuCompiler, _react, _reactDom) {\n  \"use strict\";\n\n  _react = _interopRequireWildcard(_react);\n  _reactDom = _interopRequireDefault(_reactDom);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  var gCode = \"\\nimport { workGroupSize, workGroupID, localInvocationID } from 'g-webgpu';\\n\\n@numthreads(1024, 1, 1)\\nclass Reduce {\\n  @in\\n  gData: float[]; // \\u8F93\\u5165\\n\\n  @out(10)\\n  oData: float[]; // \\u8F93\\u51FA\\n\\n  @shared(1024)\\n  sData: float[];\\n\\n  @main\\n  compute() {\\n    const tid = localInvocationID.x;\\n    const i = workGroupID.x * workGroupSize.x + localInvocationID.x;\\n\\n    this.sData[tid] = this.gData[i]; // 1\\n    barrier(); // 2\\n\\n    for (let s: int = 1; s < workGroupSize.x; s*=2) {\\n      if (tid % (s * 2) == 0) {\\n        this.sData[tid] += this.sData[tid + s]; // 3\\n      }\\n      barrier();\\n    }\\n    if (tid == 0) {\\n      this.oData[workGroupID.x] = this.sData[0]; // 4\\n    }\\n  }\\n}\\n\";\n\n  var App = /*#__PURE__*/_react.default.memo(function ReduceSum1() {\n    var _useState = (0, _react.useState)(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        CPUTimeElapsed = _useState2[0],\n        setCPUTimeElapsed = _useState2[1];\n\n    var _useState3 = (0, _react.useState)(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        GPUTimeElapsed = _useState4[0],\n        setGPUTimeElapsed = _useState4[1];\n\n    var _useState5 = (0, _react.useState)(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        CPUResult = _useState6[0],\n        setCPUResult = _useState6[1];\n\n    var _useState7 = (0, _react.useState)(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        GPUResult = _useState8[0],\n        setGPUResult = _useState8[1];\n\n    (0, _react.useEffect)(function () {\n      var data = new Array(1024 * 10).fill(undefined).map(function (_, i) {\n        return 1;\n      });\n      var timeStart = window.performance.now();\n      var sum = data.reduce(function (cur, prev) {\n        return prev + cur;\n      }, 0);\n      setCPUTimeElapsed(window.performance.now() - timeStart);\n      setCPUResult(sum); // compile our kernel code\n\n      var compiler = new _gWebgpuCompiler.Compiler();\n      var precompiledBundle = compiler.compileBundle(gCode);\n\n      var world = _gWebgpu.World.create({\n        engineOptions: {\n          supportCompute: true\n        }\n      });\n\n      var executeKernel = async function executeKernel() {\n        var kernel = world.createKernel(precompiledBundle).setDispatch([10, 1, 1]).setBinding('gData', data);\n        timeStart = window.performance.now();\n        await kernel.execute();\n        var result = await kernel.getOutput();\n        setGPUTimeElapsed(window.performance.now() - timeStart);\n        setGPUResult(result.reduce(function (cur, prev) {\n          return prev + cur;\n        }, 0));\n      };\n\n      executeKernel();\n    }, []);\n    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(\"h2\", null, \"Reduce Sum (1024 * 10 elements)\"), /*#__PURE__*/_react.default.createElement(\"ul\", null, /*#__PURE__*/_react.default.createElement(\"li\", null, \"CPU time elapsed: \", CPUTimeElapsed), /*#__PURE__*/_react.default.createElement(\"li\", null, \"GPU time elapsed: \", GPUTimeElapsed), /*#__PURE__*/_react.default.createElement(\"li\", null, \"CPUResult: \", CPUResult), /*#__PURE__*/_react.default.createElement(\"li\", null, \"GPUResult: \", GPUResult)));\n  });\n\n  _reactDom.default.render( /*#__PURE__*/_react.default.createElement(App, null), document.getElementById('wrapper'));\n});"},{"relativePath":"gpgpu/basic/reduce/demo/reduce2.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/gpgpu/basic/reduce/demo/reduce2.tsx","order":1,"filename":"reduce2.tsx","title":"Reduce 改进 2.0","screenshot":"https://gw.alipayobjects.com/os/s/prod/antv/assets/image/screenshot-placeholder-b8e70.png","source":"import { World } from '@antv/g-webgpu';\nimport { Compiler } from '@antv/g-webgpu-compiler';\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst gCode = `\nimport { workGroupSize, workGroupID, localInvocationID } from 'g-webgpu';\n\n@numthreads(1024, 1, 1)\nclass Reduce {\n  @in\n  gData: float[]; // 输入\n\n  @out(10)\n  oData: float[]; // 输出\n\n  @shared(1024)\n  sData: float[];\n\n  @main\n  compute() {\n    const tid = localInvocationID.x;\n    const i = workGroupID.x * workGroupSize.x + localInvocationID.x;\n\n    this.sData[tid] = this.gData[i]; // 1\n    barrier(); // 2\n\n    for (let s: int = 1; s < workGroupSize.x; s*=2) {\n      const index = 2 * s * tid;\n      if (index < workGroupSize.x) {\n        this.sData[index] += this.sData[index + s];\n      }\n      barrier();\n    }\n    if (tid == 0) {\n      this.oData[workGroupID.x] = this.sData[0]; // 4\n    }\n  }\n}\n`;\n\nconst App = React.memo(function ReduceSum2() {\n  const [CPUTimeElapsed, setCPUTimeElapsed] = useState(0);\n  const [GPUTimeElapsed, setGPUTimeElapsed] = useState(0);\n  const [CPUResult, setCPUResult] = useState(0);\n  const [GPUResult, setGPUResult] = useState(0);\n  useEffect(() => {\n    const data = new Array(1024 * 10).fill(undefined).map((_, i) => 1);\n    let timeStart = window.performance.now();\n    const sum = data.reduce((cur, prev) => prev + cur, 0);\n    setCPUTimeElapsed(window.performance.now() - timeStart);\n    setCPUResult(sum);\n\n    // compile our kernel code\n    const compiler = new Compiler();\n    const precompiledBundle = compiler.compileBundle(gCode);\n\n    const world = World.create({\n      engineOptions: {\n        supportCompute: true,\n      },\n    });\n\n    const executeKernel = async () => {\n      const kernel = world\n        .createKernel(precompiledBundle)\n        .setDispatch([10, 1, 1])\n        .setBinding('gData', data);\n\n      timeStart = window.performance.now();\n      await kernel.execute();\n      const result = await kernel.getOutput();\n\n      setGPUTimeElapsed(window.performance.now() - timeStart);\n      setGPUResult(result.reduce((cur, prev) => prev + cur, 0));\n    };\n    executeKernel();\n  }, []);\n\n  return (\n    <>\n      <h2>Reduce Sum (1024 * 10 elements)</h2>\n      <ul>\n        <li>CPU time elapsed: {CPUTimeElapsed}</li>\n        <li>GPU time elapsed: {GPUTimeElapsed}</li>\n        <li>CPUResult: {CPUResult}</li>\n        <li>GPUResult: {GPUResult}</li>\n      </ul>\n    </>\n  );\n});\n\nReactDOM.render(<App />, document.getElementById('wrapper'));\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g-webgpu\", \"@antv/g-webgpu-compiler\", \"react\", \"react-dom\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g-webgpu\"), require(\"@antv/g-webgpu-compiler\"), require(\"react\"), require(\"react-dom\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.gWebgpu, global.gWebgpuCompiler, global.react, global.reactDom);\n    global.reduce2 = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_gWebgpu, _gWebgpuCompiler, _react, _reactDom) {\n  \"use strict\";\n\n  _react = _interopRequireWildcard(_react);\n  _reactDom = _interopRequireDefault(_reactDom);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  var gCode = \"\\nimport { workGroupSize, workGroupID, localInvocationID } from 'g-webgpu';\\n\\n@numthreads(1024, 1, 1)\\nclass Reduce {\\n  @in\\n  gData: float[]; // \\u8F93\\u5165\\n\\n  @out(10)\\n  oData: float[]; // \\u8F93\\u51FA\\n\\n  @shared(1024)\\n  sData: float[];\\n\\n  @main\\n  compute() {\\n    const tid = localInvocationID.x;\\n    const i = workGroupID.x * workGroupSize.x + localInvocationID.x;\\n\\n    this.sData[tid] = this.gData[i]; // 1\\n    barrier(); // 2\\n\\n    for (let s: int = 1; s < workGroupSize.x; s*=2) {\\n      const index = 2 * s * tid;\\n      if (index < workGroupSize.x) {\\n        this.sData[index] += this.sData[index + s];\\n      }\\n      barrier();\\n    }\\n    if (tid == 0) {\\n      this.oData[workGroupID.x] = this.sData[0]; // 4\\n    }\\n  }\\n}\\n\";\n\n  var App = /*#__PURE__*/_react.default.memo(function ReduceSum2() {\n    var _useState = (0, _react.useState)(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        CPUTimeElapsed = _useState2[0],\n        setCPUTimeElapsed = _useState2[1];\n\n    var _useState3 = (0, _react.useState)(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        GPUTimeElapsed = _useState4[0],\n        setGPUTimeElapsed = _useState4[1];\n\n    var _useState5 = (0, _react.useState)(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        CPUResult = _useState6[0],\n        setCPUResult = _useState6[1];\n\n    var _useState7 = (0, _react.useState)(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        GPUResult = _useState8[0],\n        setGPUResult = _useState8[1];\n\n    (0, _react.useEffect)(function () {\n      var data = new Array(1024 * 10).fill(undefined).map(function (_, i) {\n        return 1;\n      });\n      var timeStart = window.performance.now();\n      var sum = data.reduce(function (cur, prev) {\n        return prev + cur;\n      }, 0);\n      setCPUTimeElapsed(window.performance.now() - timeStart);\n      setCPUResult(sum); // compile our kernel code\n\n      var compiler = new _gWebgpuCompiler.Compiler();\n      var precompiledBundle = compiler.compileBundle(gCode);\n\n      var world = _gWebgpu.World.create({\n        engineOptions: {\n          supportCompute: true\n        }\n      });\n\n      var executeKernel = async function executeKernel() {\n        var kernel = world.createKernel(precompiledBundle).setDispatch([10, 1, 1]).setBinding('gData', data);\n        timeStart = window.performance.now();\n        await kernel.execute();\n        var result = await kernel.getOutput();\n        setGPUTimeElapsed(window.performance.now() - timeStart);\n        setGPUResult(result.reduce(function (cur, prev) {\n          return prev + cur;\n        }, 0));\n      };\n\n      executeKernel();\n    }, []);\n    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(\"h2\", null, \"Reduce Sum (1024 * 10 elements)\"), /*#__PURE__*/_react.default.createElement(\"ul\", null, /*#__PURE__*/_react.default.createElement(\"li\", null, \"CPU time elapsed: \", CPUTimeElapsed), /*#__PURE__*/_react.default.createElement(\"li\", null, \"GPU time elapsed: \", GPUTimeElapsed), /*#__PURE__*/_react.default.createElement(\"li\", null, \"CPUResult: \", CPUResult), /*#__PURE__*/_react.default.createElement(\"li\", null, \"GPUResult: \", GPUResult)));\n  });\n\n  _reactDom.default.render( /*#__PURE__*/_react.default.createElement(App, null), document.getElementById('wrapper'));\n});"},{"relativePath":"gpgpu/basic/reduce/demo/reduce3.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/gpgpu/basic/reduce/demo/reduce3.tsx","order":2,"filename":"reduce3.tsx","title":"Reduce 改进 3.0","screenshot":"https://gw.alipayobjects.com/os/s/prod/antv/assets/image/screenshot-placeholder-b8e70.png","source":"import { World } from '@antv/g-webgpu';\nimport { Compiler } from '@antv/g-webgpu-compiler';\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst gCode = `\nimport { workGroupSize, workGroupID, localInvocationID } from 'g-webgpu';\n\n@numthreads(1024, 1, 1)\nclass Reduce {\n  @in\n  gData: float[]; // 输入\n\n  @out(10)\n  oData: float[]; // 输出\n\n  @shared(1024)\n  sData: float[];\n\n  @main\n  compute() {\n    const tid = localInvocationID.x;\n    const i = workGroupID.x * workGroupSize.x + localInvocationID.x;\n\n    this.sData[tid] = this.gData[i]; // 1\n    barrier(); // 2\n\n    for (let s = workGroupSize.x / 2; s > 0; s >>= 1) {\n      if (tid < s) {\n        this.sData[tid] += this.sData[tid + s];\n      }\n      barrier();\n    }\n    if (tid == 0) {\n      this.oData[workGroupID.x] = this.sData[0]; // 4\n    }\n  }\n}\n`;\n\nconst App = React.memo(function ReduceSum3() {\n  const [CPUTimeElapsed, setCPUTimeElapsed] = useState(0);\n  const [GPUTimeElapsed, setGPUTimeElapsed] = useState(0);\n  const [CPUResult, setCPUResult] = useState(0);\n  const [GPUResult, setGPUResult] = useState(0);\n  useEffect(() => {\n    const data = new Array(1024 * 10).fill(undefined).map((_, i) => 1);\n    let timeStart = window.performance.now();\n    const sum = data.reduce((cur, prev) => prev + cur, 0);\n    setCPUTimeElapsed(window.performance.now() - timeStart);\n    setCPUResult(sum);\n\n    // compile our kernel code\n    const compiler = new Compiler();\n    const precompiledBundle = compiler.compileBundle(gCode);\n\n    const world = World.create({\n      engineOptions: {\n        supportCompute: true,\n      },\n    });\n\n    const executeKernel = async () => {\n      const kernel = world\n        .createKernel(precompiledBundle)\n        .setDispatch([10, 1, 1])\n        .setBinding('gData', data);\n\n      timeStart = window.performance.now();\n      await kernel.execute();\n      const result = await kernel.getOutput();\n\n      setGPUTimeElapsed(window.performance.now() - timeStart);\n      setGPUResult(result.reduce((cur, prev) => prev + cur, 0));\n    };\n    executeKernel();\n  }, []);\n\n  return (\n    <>\n      <h2>Reduce Sum (1024 * 10 elements)</h2>\n      <ul>\n        <li>CPU time elapsed: {CPUTimeElapsed}</li>\n        <li>GPU time elapsed: {GPUTimeElapsed}</li>\n        <li>CPUResult: {CPUResult}</li>\n        <li>GPUResult: {GPUResult}</li>\n      </ul>\n    </>\n  );\n});\n\nReactDOM.render(<App />, document.getElementById('wrapper'));\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g-webgpu\", \"@antv/g-webgpu-compiler\", \"react\", \"react-dom\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g-webgpu\"), require(\"@antv/g-webgpu-compiler\"), require(\"react\"), require(\"react-dom\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.gWebgpu, global.gWebgpuCompiler, global.react, global.reactDom);\n    global.reduce3 = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_gWebgpu, _gWebgpuCompiler, _react, _reactDom) {\n  \"use strict\";\n\n  _react = _interopRequireWildcard(_react);\n  _reactDom = _interopRequireDefault(_reactDom);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  var gCode = \"\\nimport { workGroupSize, workGroupID, localInvocationID } from 'g-webgpu';\\n\\n@numthreads(1024, 1, 1)\\nclass Reduce {\\n  @in\\n  gData: float[]; // \\u8F93\\u5165\\n\\n  @out(10)\\n  oData: float[]; // \\u8F93\\u51FA\\n\\n  @shared(1024)\\n  sData: float[];\\n\\n  @main\\n  compute() {\\n    const tid = localInvocationID.x;\\n    const i = workGroupID.x * workGroupSize.x + localInvocationID.x;\\n\\n    this.sData[tid] = this.gData[i]; // 1\\n    barrier(); // 2\\n\\n    for (let s = workGroupSize.x / 2; s > 0; s >>= 1) {\\n      if (tid < s) {\\n        this.sData[tid] += this.sData[tid + s];\\n      }\\n      barrier();\\n    }\\n    if (tid == 0) {\\n      this.oData[workGroupID.x] = this.sData[0]; // 4\\n    }\\n  }\\n}\\n\";\n\n  var App = /*#__PURE__*/_react.default.memo(function ReduceSum3() {\n    var _useState = (0, _react.useState)(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        CPUTimeElapsed = _useState2[0],\n        setCPUTimeElapsed = _useState2[1];\n\n    var _useState3 = (0, _react.useState)(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        GPUTimeElapsed = _useState4[0],\n        setGPUTimeElapsed = _useState4[1];\n\n    var _useState5 = (0, _react.useState)(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        CPUResult = _useState6[0],\n        setCPUResult = _useState6[1];\n\n    var _useState7 = (0, _react.useState)(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        GPUResult = _useState8[0],\n        setGPUResult = _useState8[1];\n\n    (0, _react.useEffect)(function () {\n      var data = new Array(1024 * 10).fill(undefined).map(function (_, i) {\n        return 1;\n      });\n      var timeStart = window.performance.now();\n      var sum = data.reduce(function (cur, prev) {\n        return prev + cur;\n      }, 0);\n      setCPUTimeElapsed(window.performance.now() - timeStart);\n      setCPUResult(sum); // compile our kernel code\n\n      var compiler = new _gWebgpuCompiler.Compiler();\n      var precompiledBundle = compiler.compileBundle(gCode);\n\n      var world = _gWebgpu.World.create({\n        engineOptions: {\n          supportCompute: true\n        }\n      });\n\n      var executeKernel = async function executeKernel() {\n        var kernel = world.createKernel(precompiledBundle).setDispatch([10, 1, 1]).setBinding('gData', data);\n        timeStart = window.performance.now();\n        await kernel.execute();\n        var result = await kernel.getOutput();\n        setGPUTimeElapsed(window.performance.now() - timeStart);\n        setGPUResult(result.reduce(function (cur, prev) {\n          return prev + cur;\n        }, 0));\n      };\n\n      executeKernel();\n    }, []);\n    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(\"h2\", null, \"Reduce Sum (1024 * 10 elements)\"), /*#__PURE__*/_react.default.createElement(\"ul\", null, /*#__PURE__*/_react.default.createElement(\"li\", null, \"CPU time elapsed: \", CPUTimeElapsed), /*#__PURE__*/_react.default.createElement(\"li\", null, \"GPU time elapsed: \", GPUTimeElapsed), /*#__PURE__*/_react.default.createElement(\"li\", null, \"CPUResult: \", CPUResult), /*#__PURE__*/_react.default.createElement(\"li\", null, \"GPUResult: \", GPUResult)));\n  });\n\n  _reactDom.default.render( /*#__PURE__*/_react.default.createElement(App, null), document.getElementById('wrapper'));\n});"},{"relativePath":"gpgpu/basic/reduce/demo/reduce4.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/gpgpu/basic/reduce/demo/reduce4.tsx","order":3,"filename":"reduce4.tsx","title":"Reduce 改进 4.0","screenshot":"https://gw.alipayobjects.com/os/s/prod/antv/assets/image/screenshot-placeholder-b8e70.png","source":"import { World } from '@antv/g-webgpu';\nimport { Compiler } from '@antv/g-webgpu-compiler';\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst gCode = `\nimport { workGroupSize, workGroupID, localInvocationID } from 'g-webgpu';\n\n@numthreads(1024, 1, 1)\nclass Reduce {\n  @in\n  gData: float[]; // 输入\n\n  @out(5)\n  oData: float[]; // 输出\n\n  @shared(1024)\n  sData: float[];\n\n  @main\n  compute() {\n    const tid = localInvocationID.x;\n    const i = workGroupID.x * workGroupSize.x + localInvocationID.x;\n\n    this.sData[tid] = this.gData[i] + this.gData[i + workGroupSize.x];\n    barrier();\n\n    for (let s = workGroupSize.x / 2; s > 0; s >>= 1) {\n      if (tid < s) {\n        this.sData[tid] += this.sData[tid + s];\n      }\n      barrier();\n    }\n    if (tid == 0) {\n      this.oData[workGroupID.x] = this.sData[0];\n    }\n  }\n}\n`;\n\nconst App = React.memo(function ReduceSum4() {\n  const [CPUTimeElapsed, setCPUTimeElapsed] = useState(0);\n  const [GPUTimeElapsed, setGPUTimeElapsed] = useState(0);\n  const [CPUResult, setCPUResult] = useState(0);\n  const [GPUResult, setGPUResult] = useState(0);\n  useEffect(() => {\n    const data = new Array(1024 * 10).fill(undefined).map((_, i) => 1);\n    let timeStart = window.performance.now();\n    const sum = data.reduce((cur, prev) => prev + cur, 0);\n    setCPUTimeElapsed(window.performance.now() - timeStart);\n    setCPUResult(sum);\n\n    // compile our kernel code\n    const compiler = new Compiler();\n    const precompiledBundle = compiler.compileBundle(gCode);\n\n    const world = World.create({\n      engineOptions: {\n        supportCompute: true,\n      },\n    });\n\n    const executeKernel = async () => {\n      const kernel = world\n        .createKernel(precompiledBundle)\n        .setDispatch([10, 1, 1])\n        .setBinding('gData', data);\n\n      timeStart = window.performance.now();\n      await kernel.execute();\n      const result = await kernel.getOutput();\n\n      setGPUTimeElapsed(window.performance.now() - timeStart);\n      setGPUResult(result.reduce((cur, prev) => prev + cur, 0));\n    };\n    executeKernel();\n  }, []);\n\n  return (\n    <>\n      <h2>Reduce Sum (1024 * 10 elements)</h2>\n      <ul>\n        <li>CPU time elapsed: {CPUTimeElapsed}</li>\n        <li>GPU time elapsed: {GPUTimeElapsed}</li>\n        <li>CPUResult: {CPUResult}</li>\n        <li>GPUResult: {GPUResult}</li>\n      </ul>\n    </>\n  );\n});\n\nReactDOM.render(<App />, document.getElementById('wrapper'));\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g-webgpu\", \"@antv/g-webgpu-compiler\", \"react\", \"react-dom\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g-webgpu\"), require(\"@antv/g-webgpu-compiler\"), require(\"react\"), require(\"react-dom\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.gWebgpu, global.gWebgpuCompiler, global.react, global.reactDom);\n    global.reduce4 = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_gWebgpu, _gWebgpuCompiler, _react, _reactDom) {\n  \"use strict\";\n\n  _react = _interopRequireWildcard(_react);\n  _reactDom = _interopRequireDefault(_reactDom);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  var gCode = \"\\nimport { workGroupSize, workGroupID, localInvocationID } from 'g-webgpu';\\n\\n@numthreads(1024, 1, 1)\\nclass Reduce {\\n  @in\\n  gData: float[]; // \\u8F93\\u5165\\n\\n  @out(5)\\n  oData: float[]; // \\u8F93\\u51FA\\n\\n  @shared(1024)\\n  sData: float[];\\n\\n  @main\\n  compute() {\\n    const tid = localInvocationID.x;\\n    const i = workGroupID.x * workGroupSize.x + localInvocationID.x;\\n\\n    this.sData[tid] = this.gData[i] + this.gData[i + workGroupSize.x];\\n    barrier();\\n\\n    for (let s = workGroupSize.x / 2; s > 0; s >>= 1) {\\n      if (tid < s) {\\n        this.sData[tid] += this.sData[tid + s];\\n      }\\n      barrier();\\n    }\\n    if (tid == 0) {\\n      this.oData[workGroupID.x] = this.sData[0];\\n    }\\n  }\\n}\\n\";\n\n  var App = /*#__PURE__*/_react.default.memo(function ReduceSum4() {\n    var _useState = (0, _react.useState)(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        CPUTimeElapsed = _useState2[0],\n        setCPUTimeElapsed = _useState2[1];\n\n    var _useState3 = (0, _react.useState)(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        GPUTimeElapsed = _useState4[0],\n        setGPUTimeElapsed = _useState4[1];\n\n    var _useState5 = (0, _react.useState)(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        CPUResult = _useState6[0],\n        setCPUResult = _useState6[1];\n\n    var _useState7 = (0, _react.useState)(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        GPUResult = _useState8[0],\n        setGPUResult = _useState8[1];\n\n    (0, _react.useEffect)(function () {\n      var data = new Array(1024 * 10).fill(undefined).map(function (_, i) {\n        return 1;\n      });\n      var timeStart = window.performance.now();\n      var sum = data.reduce(function (cur, prev) {\n        return prev + cur;\n      }, 0);\n      setCPUTimeElapsed(window.performance.now() - timeStart);\n      setCPUResult(sum); // compile our kernel code\n\n      var compiler = new _gWebgpuCompiler.Compiler();\n      var precompiledBundle = compiler.compileBundle(gCode);\n\n      var world = _gWebgpu.World.create({\n        engineOptions: {\n          supportCompute: true\n        }\n      });\n\n      var executeKernel = async function executeKernel() {\n        var kernel = world.createKernel(precompiledBundle).setDispatch([10, 1, 1]).setBinding('gData', data);\n        timeStart = window.performance.now();\n        await kernel.execute();\n        var result = await kernel.getOutput();\n        setGPUTimeElapsed(window.performance.now() - timeStart);\n        setGPUResult(result.reduce(function (cur, prev) {\n          return prev + cur;\n        }, 0));\n      };\n\n      executeKernel();\n    }, []);\n    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(\"h2\", null, \"Reduce Sum (1024 * 10 elements)\"), /*#__PURE__*/_react.default.createElement(\"ul\", null, /*#__PURE__*/_react.default.createElement(\"li\", null, \"CPU time elapsed: \", CPUTimeElapsed), /*#__PURE__*/_react.default.createElement(\"li\", null, \"GPU time elapsed: \", GPUTimeElapsed), /*#__PURE__*/_react.default.createElement(\"li\", null, \"CPUResult: \", CPUResult), /*#__PURE__*/_react.default.createElement(\"li\", null, \"GPUResult: \", GPUResult)));\n  });\n\n  _reactDom.default.render( /*#__PURE__*/_react.default.createElement(App, null), document.getElementById('wrapper'));\n});"},{"relativePath":"gpgpu/basic/reduce/demo/reduce5.tsx","absolutePath":"/Users/pyq/workspace/webgpu/GWebGPUEngine/examples/gpgpu/basic/reduce/demo/reduce5.tsx","order":4,"filename":"reduce5.tsx","title":"Reduce 改进 5.0","screenshot":"https://gw.alipayobjects.com/os/s/prod/antv/assets/image/screenshot-placeholder-b8e70.png","source":"import { World } from '@antv/g-webgpu';\nimport { Compiler } from '@antv/g-webgpu-compiler';\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst gCode = `\nimport { workGroupSize, workGroupID, localInvocationID } from 'g-webgpu';\n\n@numthreads(1024, 1, 1)\nclass Reduce {\n  @in\n  gData: float[]; // 输入\n\n  @out(5)\n  oData: float[]; // 输出\n\n  @shared(1024)\n  sData: float[];\n\n  @main\n  compute() {\n    const tid = localInvocationID.x;\n    const i = workGroupID.x * workGroupSize.x + localInvocationID.x;\n\n    this.sData[tid] = this.gData[i] + this.gData[i + workGroupSize.x];\n    barrier();\n\n    for (let s = workGroupSize.x / 2; s > 32; s >>= 1) {\n      if (tid < s) {\n        this.sData[tid] += this.sData[tid + s];\n      }\n      barrier();\n    }\n    if (tid < 32) {\n      this.sData[tid] += this.sData[tid + 32];\n      this.sData[tid] += this.sData[tid + 16];\n      this.sData[tid] += this.sData[tid + 8];\n      this.sData[tid] += this.sData[tid + 4];\n      this.sData[tid] += this.sData[tid + 2];\n      this.sData[tid] += this.sData[tid + 1];\n    }\n    if (tid == 0) {\n      this.oData[workGroupID.x] = this.sData[0];\n    }\n  }\n}\n`;\n\nconst App = React.memo(function ReduceSum5() {\n  const [CPUTimeElapsed, setCPUTimeElapsed] = useState(0);\n  const [GPUTimeElapsed, setGPUTimeElapsed] = useState(0);\n  const [CPUResult, setCPUResult] = useState(0);\n  const [GPUResult, setGPUResult] = useState(0);\n  useEffect(() => {\n    const data = new Array(1024 * 10).fill(undefined).map((_, i) => 1);\n    let timeStart = window.performance.now();\n    const sum = data.reduce((cur, prev) => prev + cur, 0);\n    setCPUTimeElapsed(window.performance.now() - timeStart);\n    setCPUResult(sum);\n\n    // compile our kernel code\n    const compiler = new Compiler();\n    const precompiledBundle = compiler.compileBundle(gCode);\n\n    const world = World.create({\n      engineOptions: {\n        supportCompute: true,\n      },\n    });\n\n    const executeKernel = async () => {\n      const kernel = world\n        .createKernel(precompiledBundle)\n        .setDispatch([10, 1, 1])\n        .setBinding('gData', data);\n\n      timeStart = window.performance.now();\n      await kernel.execute();\n      const result = await kernel.getOutput();\n\n      setGPUTimeElapsed(window.performance.now() - timeStart);\n      setGPUResult(result.reduce((cur, prev) => prev + cur, 0));\n    };\n    executeKernel();\n  }, []);\n\n  return (\n    <>\n      <h2>Reduce Sum (1024 * 10 elements)</h2>\n      <ul>\n        <li>CPU time elapsed: {CPUTimeElapsed}</li>\n        <li>GPU time elapsed: {GPUTimeElapsed}</li>\n        <li>CPUResult: {CPUResult}</li>\n        <li>GPUResult: {GPUResult}</li>\n      </ul>\n    </>\n  );\n});\n\nReactDOM.render(<App />, document.getElementById('wrapper'));\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g-webgpu\", \"@antv/g-webgpu-compiler\", \"react\", \"react-dom\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g-webgpu\"), require(\"@antv/g-webgpu-compiler\"), require(\"react\"), require(\"react-dom\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.gWebgpu, global.gWebgpuCompiler, global.react, global.reactDom);\n    global.reduce5 = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_gWebgpu, _gWebgpuCompiler, _react, _reactDom) {\n  \"use strict\";\n\n  _react = _interopRequireWildcard(_react);\n  _reactDom = _interopRequireDefault(_reactDom);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  var gCode = \"\\nimport { workGroupSize, workGroupID, localInvocationID } from 'g-webgpu';\\n\\n@numthreads(1024, 1, 1)\\nclass Reduce {\\n  @in\\n  gData: float[]; // \\u8F93\\u5165\\n\\n  @out(5)\\n  oData: float[]; // \\u8F93\\u51FA\\n\\n  @shared(1024)\\n  sData: float[];\\n\\n  @main\\n  compute() {\\n    const tid = localInvocationID.x;\\n    const i = workGroupID.x * workGroupSize.x + localInvocationID.x;\\n\\n    this.sData[tid] = this.gData[i] + this.gData[i + workGroupSize.x];\\n    barrier();\\n\\n    for (let s = workGroupSize.x / 2; s > 32; s >>= 1) {\\n      if (tid < s) {\\n        this.sData[tid] += this.sData[tid + s];\\n      }\\n      barrier();\\n    }\\n    if (tid < 32) {\\n      this.sData[tid] += this.sData[tid + 32];\\n      this.sData[tid] += this.sData[tid + 16];\\n      this.sData[tid] += this.sData[tid + 8];\\n      this.sData[tid] += this.sData[tid + 4];\\n      this.sData[tid] += this.sData[tid + 2];\\n      this.sData[tid] += this.sData[tid + 1];\\n    }\\n    if (tid == 0) {\\n      this.oData[workGroupID.x] = this.sData[0];\\n    }\\n  }\\n}\\n\";\n\n  var App = /*#__PURE__*/_react.default.memo(function ReduceSum5() {\n    var _useState = (0, _react.useState)(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        CPUTimeElapsed = _useState2[0],\n        setCPUTimeElapsed = _useState2[1];\n\n    var _useState3 = (0, _react.useState)(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        GPUTimeElapsed = _useState4[0],\n        setGPUTimeElapsed = _useState4[1];\n\n    var _useState5 = (0, _react.useState)(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        CPUResult = _useState6[0],\n        setCPUResult = _useState6[1];\n\n    var _useState7 = (0, _react.useState)(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        GPUResult = _useState8[0],\n        setGPUResult = _useState8[1];\n\n    (0, _react.useEffect)(function () {\n      var data = new Array(1024 * 10).fill(undefined).map(function (_, i) {\n        return 1;\n      });\n      var timeStart = window.performance.now();\n      var sum = data.reduce(function (cur, prev) {\n        return prev + cur;\n      }, 0);\n      setCPUTimeElapsed(window.performance.now() - timeStart);\n      setCPUResult(sum); // compile our kernel code\n\n      var compiler = new _gWebgpuCompiler.Compiler();\n      var precompiledBundle = compiler.compileBundle(gCode);\n\n      var world = _gWebgpu.World.create({\n        engineOptions: {\n          supportCompute: true\n        }\n      });\n\n      var executeKernel = async function executeKernel() {\n        var kernel = world.createKernel(precompiledBundle).setDispatch([10, 1, 1]).setBinding('gData', data);\n        timeStart = window.performance.now();\n        await kernel.execute();\n        var result = await kernel.getOutput();\n        setGPUTimeElapsed(window.performance.now() - timeStart);\n        setGPUResult(result.reduce(function (cur, prev) {\n          return prev + cur;\n        }, 0));\n      };\n\n      executeKernel();\n    }, []);\n    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(\"h2\", null, \"Reduce Sum (1024 * 10 elements)\"), /*#__PURE__*/_react.default.createElement(\"ul\", null, /*#__PURE__*/_react.default.createElement(\"li\", null, \"CPU time elapsed: \", CPUTimeElapsed), /*#__PURE__*/_react.default.createElement(\"li\", null, \"GPU time elapsed: \", GPUTimeElapsed), /*#__PURE__*/_react.default.createElement(\"li\", null, \"CPUResult: \", CPUResult), /*#__PURE__*/_react.default.createElement(\"li\", null, \"GPUResult: \", GPUResult)));\n  });\n\n  _reactDom.default.render( /*#__PURE__*/_react.default.createElement(App, null), document.getElementById('wrapper'));\n});"}]}}},"staticQueryHashes":["3000541721","3000541721","653731124"]}